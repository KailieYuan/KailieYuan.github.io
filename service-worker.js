"use strict";function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}var precacheConfig=[["/index.html","4e7b328547946893a1a9b2e6924a3178"],["/static/css/main.0d676ffd.css","05f8f03491dea11141c4c66f19a2a8ef"],["/static/js/main.b43d879d.js","cf24de844e5d25241dcdf2eb4ceffde4"],["/static/media/ColorFlood.c2a98871.jpg","c2a988717cf2ebadabef761d02921998"],["/static/media/Jeopardy.af3f0309.jpg","af3f03097daf9830165dcc44f8f3421b"],["/static/media/add_more.b3e489f9.png","b3e489f91ceea5a828e1b8b915088958"],["/static/media/cards_cal.cd77e674.jpg","cd77e67441a57b7f66dd62527f29758b"],["/static/media/cards_chat.c29db30c.jpg","c29db30c44f7893e59fe60a80cddb061"],["/static/media/cards_exercise.873b2e6c.jpg","873b2e6ca27a3dc8cb68c413c0ce9bd5"],["/static/media/cards_games.eeba8acd.jpg","eeba8acd7c67c4b6bd97cc120bf99759"],["/static/media/cards_map.dbc8f060.jpg","dbc8f060483c0f347dfd3c6b170a4a53"],["/static/media/cards_music.8f067cb8.jpg","8f067cb8ea1f3b12554cd76efdae49e5"],["/static/media/event1.10b86f8f.ogg","10b86f8f680dde96dee82b844fc2022f"],["/static/media/event10.65eb3615.ogg","65eb3615aee37465c84076818becd966"],["/static/media/event11.838f9399.ogg","838f93991298ff53e49afe967ff7b8d1"],["/static/media/event2.faa0a7c1.ogg","faa0a7c169efe1462122f86b09f44ba9"],["/static/media/event3.d6a52f5e.ogg","d6a52f5ee10cbf8eb1a2933492527fa3"],["/static/media/event4.485d9c4e.ogg","485d9c4e6e4ad6737b2d42c1f461bdbb"],["/static/media/event5.62f5cc70.ogg","62f5cc708694847617eb9ce11228248e"],["/static/media/event6.66ce7717.ogg","66ce7717b1a173931d7440c5cb8fd984"],["/static/media/event7.a226363f.ogg","a226363fb05359de3f91dd9887eaf425"],["/static/media/event8.07c5ecf1.ogg","07c5ecf1526c1dee7288cbe3986418ed"],["/static/media/event9.7b5279a1.ogg","7b5279a17f89c3ff59a005af2af29b4b"],["/static/media/sudoku.f8f7e1e2.jpg","f8f7e1e2a497dd1db51545d9c1815d39"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(e){return e.redirected?("body"in e?Promise.resolve(e.body):e.blob()).then(function(t){return new Response(t,{headers:e.headers,status:e.status,statusText:e.statusText})}):Promise.resolve(e)},createCacheKey=function(e,t,a,c){var n=new URL(e);return c&&n.pathname.match(c)||(n.search+=(n.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),n.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,t){var a=new URL(e);return a.hash="",a.search=a.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(e){return t.every(function(t){return!t.test(e[0])})}).map(function(e){return e.join("=")}).join("&"),a.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],c=new URL(t,self.location),n=createCacheKey(c,hashParamName,a,/\.\w{8}\./);return[c.toString(),n]}));self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(e){return setOfCachedUrls(e).then(function(t){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(a){if(!t.has(a)){var c=new Request(a,{credentials:"same-origin"});return fetch(c).then(function(t){if(!t.ok)throw new Error("Request for "+a+" returned a response with status "+t.status);return cleanResponse(t).then(function(t){return e.put(a,t)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var t=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(e){return e.keys().then(function(a){return Promise.all(a.map(function(a){if(!t.has(a.url))return e.delete(a)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(e){if("GET"===e.request.method){var t,a=stripIgnoredUrlParameters(e.request.url,ignoreUrlParametersMatching);(t=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,"index.html"),t=urlsToCacheKeys.has(a));!t&&"navigate"===e.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],e.request.url)&&(a=new URL("/index.html",self.location).toString(),t=urlsToCacheKeys.has(a)),t&&e.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(t){return console.warn('Couldn\'t serve response for "%s" from cache: %O',e.request.url,t),fetch(e.request)}))}});